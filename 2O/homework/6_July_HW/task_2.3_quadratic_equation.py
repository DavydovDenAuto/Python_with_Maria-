# Введите с клавиатуры 3 коэффициента квадратного уравнения и найдите действительные корни
"""
Квадратное уравнение — это уравнение вида ax2 + bx + c = 0,
где коэффициенты a, b и c — произвольные числа, причем a ≠ 0
все квадратные уравнения можно условно разделить на три класса:
Не имеют корней;
Имеют ровно один корень;
Имеют два различных корня.
Как определить, сколько корней имеет уравнение?
Для этого существует замечательная вещь — дискриминант.
Пусть дано квадратное уравнение ax2 + bx + c = 0.
Тогда дискриминант — это просто число D = b2 − 4ac.
Откуда она берется — сейчас неважно. Важно другое: по знаку дискриминанта можно определить,
сколько корней имеет квадратное уравнение. А именно:
Если D < 0, корней нет;
Если D = 0, есть ровно один корень;
Если D > 0, корней будет два.
"""
import math


def calculate_quadr_equation():
    str = ['a', 'b', 'c']
    numbers = []
    n = 3
    print('ax^2 + bx + c = 0:')
    print('Введите коэффициенты для решения квадратного уравнения: ')
    while n > 0:
        for i in str:
            x = float(input(f'Введите коэффициент "{i}": '))
            numbers.append(x)
            n -= 1
    if numbers[0] == 0:
        print('Введите a > 0, судя по введенным коэффициентам - это линейное уравнение, корней нет')
    else:
        D = numbers[1] ** 2 - 4 * numbers[0] * numbers[2]
        if D < 0:
            print('т.к. дискриминант < 0, корней нет')
        elif D == 0:
            print('т.к. дискриминант = 0, есть ровно один корень: ')
            x1 = ((-numbers[1] + math.sqrt(D)) / 2 * numbers[0])
            print(f'x1 = {round(x1, 3)}')
        else:
            print('т.к. дискриминант > 0, корней будет два:')
            x1 = ((-numbers[1] + math.sqrt(D)) / 2 * numbers[0])
            x2 = ((-numbers[1] - math.sqrt(D)) / 2 * numbers[0])
            print(f'x1 = {round(x1, 3)}, x2 = {round(x2, 3)}')


calculate_quadr_equation()

#stackoverflow
from math import sqrt
s = lambda a,b,c: {(-b-sqrt(d))/2*a,(-b+sqrt(d))/2*a} if (d:=b**2-4*a*c)>=0 else {}
roots_set = s(int(input('a=')),int(input('b=')),int(input('c=')))
print(roots_set,f'number of roots {len(roots_set)}')
